# The Continuous Integration Workflow for the Distribution Tasks ADO Extension

name: Distribution Tasks CI

env:
  working-dir: MDRLabs.ADO.PipelineTask.Extension

on:
  # Trigger the workflow on push or pull request,  but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
# Run jobs sequentially (max-parallel = 1), i.e. first CI and then CD. By default jobs run in parallel (max-parallel = 2)

jobs:

  ci-workflow: # 1st Job
    name: 'CI Workflow for Distribution Tasks'
    runs-on: ubuntu-latest

    # All steps use these defaults
    defaults:
      run:
        working-directory: ${{env.working-dir}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          check-latest: false

      - name: Install NPM Dependencies
        run: npm install

      - name: Fix Audit Issues (if any) # make conditional to speed up the build
        run: npm audit fix

      - name: npm install latest tfx-cli
        run: npm install tfx-cli --prefix ./_tools

      - name: Build All
        run: npm run build:all

      - name: Directory list
        run: ls -al ; ls -al ./dist

      - name: Package Extension
        uses: actions/upload-artifact@v2
        with:
          name: DistributePipelines
          path: |
             ${{ github.workspace }}/${{env.working-dir}}/vss-extension.json
             ${{ github.workspace }}/${{env.working-dir}}/dist/**/
          if-no-files-found: error # 'error' 'warn' or 'ignore' are also available, defaults to `warn` 

      # Publish Extension
      - name: Publish Extension
        env:
          npm_cfg_ado_pat: ${{secrets.NPM_CFG_ADO_PAT}}
        run: npm run extension:publish
        if: success()