# The Continuous Integration Workflow for the Distribution Tasks ADO Extension

name: Distribution Tasks CI

env:
  working-dir: MDRLabs.ADO.PipelineTask.Extension

on:
  # Trigger the workflow on push or pull request,  but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci-workflow: # 1st Job
    name: CI Workflow for Distribution Tasks
    runs-on: ubuntu-latest

    # All steps use these defaults
    defaults:
      run:
        working-directory: ${{env.working-dir}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          check-latest: false

      - name: Install NPM Dependencies
        run: npm install

      - name: Fix Audit Issues (if any) # make conditional to speed up the build
        run: npm audit fix

      - name: npm install latest tfx-cli
        run: npm install tfx-cli --prefix ./_tools

      - name: Build All
        run: npm run build:all

      - name: Directory list
        run: ls -al ; ls -al ./dist

      - name: Package Extension
        uses: actions/upload-artifact@v2
        with:
          name: DistributePipelines
          path: ${{ github.workspace }}/${{env.working-dir}}/dist/**/*
          if-no-files-found: error # 'error' 'warn' or 'ignore' are also available, defaults to `warn` 

  cd-workflow: # 2nd Job
    name: CD Workflow for Distribution Tasks
    runs-on: Windows-latest

    # All steps use these defaults
    defaults:
      run:
        working-directory: ${{env.working-dir}}

    steps:
      # Publish extension to the Marketplace
      - name: Publish extension to Marketplace
        uses: cezarypiatek/VsixPublisherAction@0.2
        with:
          extension-file: ${{ github.workspace }}/${{env.working-dir}}/dist/*.vsix
          publish-manifest-file: vss-extension.json
          personal-access-code: ${{ secrets.NPM_CFG_ADO_PAT }}

